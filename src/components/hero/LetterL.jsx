/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Tyler Waite (https://sketchfab.com/holos-tyler)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/m-1691810869a64d7ca7579df17cb5227b
Title: L
*/

import React, { useRef, useEffect, useState } from "react";
import { useGLTF } from "@react-three/drei";

const LetterL = (props) => {
  const { nodes, materials } = useGLTF("/models/l.glb");
  const groupRef = useRef();
  const [rotationY, setRotationY] = useState(0);

  useEffect(() => {
    let animationFrameId;

    const animateRotation = () => {
      setRotationY((prevRotationY) => {
        const newRotationY = prevRotationY + 0.01; // Kontinuirano povećanje rotacije
        if (newRotationY > Math.PI * 2) {
          return 0; // Resetuj rotaciju kad pređe pun krug
        }
        return newRotationY;
      });
      animationFrameId = requestAnimationFrame(animateRotation); // Nastavi animaciju
    };

    animateRotation(); // Pokreni animaciju

    // Očisti kada komponenta bude uklonjena
    return () => cancelAnimationFrame(animationFrameId);
  }, []);

  return (
    <group
      {...props}
      ref={groupRef}
      dispose={null}
      rotation={[0, rotationY, 0]}
    >
      <mesh
        geometry={nodes.Object_2.geometry}
        material={materials.color_13324106}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </group>
  );
};

useGLTF.preload("/models/l.glb");

export default LetterL;
