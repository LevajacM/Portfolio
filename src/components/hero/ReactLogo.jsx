/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: xenadus (https://sketchfab.com/xenadus)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/react-logo-76174ceeba96487f9863f974636f641e
Title: React logo
*/

import React, { useRef, useEffect, useState } from "react";
import { Float, useGLTF } from "@react-three/drei";

const ReactLogo = (props) => {
  const { nodes, materials } = useGLTF("/models/react_logo.glb");
  const groupRef = useRef();
  const [rotationY, setRotationY] = useState(0);

  useEffect(() => {
    let animationFrameId;

    const animateRotation = () => {
      setRotationY((prevRotationY) => {
        const newRotationY = prevRotationY + 0.01; // Kontinuirano povećanje rotacije
        if (newRotationY > Math.PI * 2) {
          return 0; // Resetuj rotaciju kad pređe pun krug
        }
        return newRotationY;
      });
      animationFrameId = requestAnimationFrame(animateRotation); // Nastavi animaciju
    };

    animateRotation(); // Pokreni animaciju

    // Očisti kada komponenta bude uklonjena
    return () => cancelAnimationFrame(animationFrameId);
  }, []);

  return (
    <group
      {...props}
      ref={groupRef}
      dispose={null}
      rotation={[0, rotationY, 0]}
    >
      <group scale={1}>
        <mesh
          geometry={nodes["React-Logo_Material002_0"].geometry}
          material={materials["Material.002"]}
          position={[0, 7.935, 18.102]}
          rotation={[0, 0, -Math.PI / 2]}
          scale={[39.166, 39.166, 52.734]}
        />
      </group>
    </group>
  );
};

useGLTF.preload("/models/react_logo.glb");

export default ReactLogo;
